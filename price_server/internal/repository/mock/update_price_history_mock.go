// Code generated by MockGen. DO NOT EDIT.
// Source: price_api/price_server/internal/repository (interfaces: UpdatePriceRepository)

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	vo "price_api/price_server/internal/vo"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUpdatePriceRepository is a mock of UpdatePriceRepository interface.
type MockUpdatePriceRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUpdatePriceRepositoryMockRecorder
}

// MockUpdatePriceRepositoryMockRecorder is the mock recorder for MockUpdatePriceRepository.
type MockUpdatePriceRepositoryMockRecorder struct {
	mock *MockUpdatePriceRepository
}

// NewMockUpdatePriceRepository creates a new mock instance.
func NewMockUpdatePriceRepository(ctrl *gomock.Controller) *MockUpdatePriceRepository {
	mock := &MockUpdatePriceRepository{ctrl: ctrl}
	mock.recorder = &MockUpdatePriceRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUpdatePriceRepository) EXPECT() *MockUpdatePriceRepositoryMockRecorder {
	return m.recorder
}

// GetTotalUpdatePriceHistoryBySymbol mocks base method.
func (m *MockUpdatePriceRepository) GetTotalUpdatePriceHistoryBySymbol(arg0 string) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTotalUpdatePriceHistoryBySymbol", arg0)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTotalUpdatePriceHistoryBySymbol indicates an expected call of GetTotalUpdatePriceHistoryBySymbol.
func (mr *MockUpdatePriceRepositoryMockRecorder) GetTotalUpdatePriceHistoryBySymbol(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTotalUpdatePriceHistoryBySymbol", reflect.TypeOf((*MockUpdatePriceRepository)(nil).GetTotalUpdatePriceHistoryBySymbol), arg0)
}

// GetUpdatePriceHistoryBySymbol mocks base method.
func (m *MockUpdatePriceRepository) GetUpdatePriceHistoryBySymbol(arg0, arg1 int, arg2 string) ([]vo.UpdatePirceHistory, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUpdatePriceHistoryBySymbol", arg0, arg1, arg2)
	ret0, _ := ret[0].([]vo.UpdatePirceHistory)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUpdatePriceHistoryBySymbol indicates an expected call of GetUpdatePriceHistoryBySymbol.
func (mr *MockUpdatePriceRepositoryMockRecorder) GetUpdatePriceHistoryBySymbol(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUpdatePriceHistoryBySymbol", reflect.TypeOf((*MockUpdatePriceRepository)(nil).GetUpdatePriceHistoryBySymbol), arg0, arg1, arg2)
}
